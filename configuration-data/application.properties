####################################################
# Database
####################################################
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Cloud DB
#spring.datasource.url=jdbc:postgresql://aws-0-eu-central-1.pooler.supabase.com:5432/postgres
#spring.datasource.username=postgres.izeztgbtkdoezxwqaivg
#spring.datasource.password = KTgNaIxr4djhtASe

####################################################
# Oauth2
####################################################
#spring.security.oauth2.client.registration.github.client-id=5ce62cfae62cd4e1fc22
#spring.security.oauth2.client.registration.github.client-secret=552e124f9d16111861c6d27eb0aa58473c2dc945

spring.security.oauth2.client.registration.google.client-id=530532984709-j7daoihjh84gneke1544k05rkskgeo4n.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# Local Db
spring.datasource.url = jdbc:postgresql://localhost:5432/swapitdb
spring.datasource.username = postgres
spring.datasource.password = KTgNaIxr4djhtASe

####################################################
# Security
####################################################
application.security.jwt.secretKey = 60e63bfe3c917960425643624839cf47ea6bbc972c1855795601d56836cd0860
application.security.jwt.expiration = 86400000
application.security.jwt.refreshToken.expiration = 604800000
application.encrypt.secret.key = eA/d08rM0bg1ZOpC2w8awkZa1HPG7RZLqo2UOhb+HvAS68YB5OAaja+S0sgPr+AxFMZomH0Enj1KluT0LT1wuaeZy7psbWdDzD/65aF2QME=

####################################################
# Servers Port
####################################################
apiGateway.server.port=8001
user.server.port=8002
chat.server.port=8003
product.server.port=8004
searchEngine.server.port=8005

####################################################
# Logging
####################################################
logging.level.org.springframework.security=DEBUG

####################################################
# API GATEWAY URLS
####################################################
# User microservice routes
user.route=http://localhost:${user.server.port}/api/v1/swapIt/user
user.login.route=${user.route}/auth/login
user.oauth2login.route=${user.route}/auth/oauth2login
user.register.route=${user.route}/auth/register
user.sendRegistrationCode.route=${user.route}/auth/sendRegistrationCode
user.getUserDetails.route=${user.route}/getUserDetails
user.getSpecificUsersDetails.route=${user.route}/getSpecificUsersDetails
user.updateBasicUserDetails.route=${user.route}/updateBasicUserDetails
user.updateProtectedUserDetails.route=${user.route}/updateProtectedUserDetails

# Product microservice routes
product.route=http://localhost:${product.server.port}/api/v1/swapIt/product
product.createProduct.route=${product.route}/createProduct
product.updateProduct.route=${product.route}/updateProduct
product.getProductById.route=${product.route}/getProductById
product.getProductsByUser.route=${product.route}/getProductsByUser
product.changeProductLikeStatus.route=${product.route}/changeProductLikeStatus
product.getProductLikeStatus.route=${product.route}/getProductLikeStatus
product.getLikedProductsByUser.route=${product.route}/getLikedProductsByUser
product.getRecommendedProducts.route=${product.route}/getRecommendedProducts

# Chat microservice routes
chat.route=http://localhost:${chat.server.port}/api/v1/swapIt/chat/
chat.sendPrivateMessage.route=${chat.route}/sendPrivateMessage
chat.getConversationsPreview.route=${chat.route}/getConversationsPreview
chat.getConversation.route=${chat.route}/getConversation

# Search Engine microservice routes
searchEngine.route=http://localhost:${searchEngine.server.port}/api/v1/swapIt/searchEngine
searchEngine.addNewProductCategory.route=${searchEngine.route}/addNewProductCategory
searchEngine.getAllProductCategories.route=${searchEngine.route}/getAllProductCategories
searchEngine.addProductInSearchDictionary.route=${searchEngine.route}/addProductInSearchDictionary
searchEngine.updateProductInSearchDictionary.route=${searchEngine.route}/updateProductInSearchDictionary
searchEngine.searchProducts.route=${searchEngine.route}/searchProducts
searchEngine.getCategoryTree.route=${searchEngine.route}/getCategoryTree
searchEngine.searchProductsByCategory.route=${searchEngine.route}/searchProductsByCategory

####################################################
# Cache
####################################################
hazelcast.instance.name=hazelcast_instance
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=com.hazelcast.hibernate.HazelcastLocalCacheRegionFactory
spring.jpa.properties.hibernate.cache.hazelcast.instance_name=${hazelcast.instance.name}
spring.jpa.properties.hibernate.show_sql=true